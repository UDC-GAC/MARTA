#include "codelet.h"

/* kernel_spmv_fragment_0 S80PI_n1-d1compr-leftover.spf.c */

#define restrict __restrict

void codelet(double *restrict A, double *restrict x, double *restrict y)
{
  register int i0, i1, i2, i3, i4, i5, i6;

#pragma macveth unroll i0 full
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 5] += A[i0 + 0] * x[1 * i0 + 5];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 14] += A[i0 + 8] * x[1 * i0 + 15];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 15] += A[i0 + 16] * x[1 * i0 + 14];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 22] += A[i0 + 24] * x[1 * i0 + 23];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 23] += A[i0 + 32] * x[1 * i0 + 22];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 30] += A[i0 + 40] * x[1 * i0 + 31];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 31] += A[i0 + 48] * x[1 * i0 + 30];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 38] += A[i0 + 56] * x[1 * i0 + 39];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 39] += A[i0 + 64] * x[1 * i0 + 38];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 46] += A[i0 + 72] * x[1 * i0 + 47];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 47] += A[i0 + 80] * x[1 * i0 + 46];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 54] += A[i0 + 88] * x[1 * i0 + 55];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 55] += A[i0 + 96] * x[1 * i0 + 54];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 62] += A[i0 + 104] * x[1 * i0 + 63];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 63] += A[i0 + 112] * x[1 * i0 + 62];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 70] += A[i0 + 120] * x[1 * i0 + 71];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 71] += A[i0 + 128] * x[1 * i0 + 70];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 78] += A[i0 + 136] * x[1 * i0 + 79];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 79] += A[i0 + 144] * x[1 * i0 + 78];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 86] += A[i0 + 152] * x[1 * i0 + 87];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 87] += A[i0 + 160] * x[1 * i0 + 86];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 94] += A[i0 + 168] * x[1 * i0 + 95];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 95] += A[i0 + 176] * x[1 * i0 + 94];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 102] += A[i0 + 184] * x[1 * i0 + 103];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 103] += A[i0 + 192] * x[1 * i0 + 102];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 110] += A[i0 + 200] * x[1 * i0 + 111];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 111] += A[i0 + 208] * x[1 * i0 + 110];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 118] += A[i0 + 216] * x[1 * i0 + 119];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 119] += A[i0 + 224] * x[1 * i0 + 118];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 126] += A[i0 + 232] * x[1 * i0 + 127];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 127] += A[i0 + 240] * x[1 * i0 + 126];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 134] += A[i0 + 248] * x[1 * i0 + 135];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 135] += A[i0 + 256] * x[1 * i0 + 134];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 142] += A[i0 + 264] * x[1 * i0 + 143];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 143] += A[i0 + 272] * x[1 * i0 + 142];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 150] += A[i0 + 280] * x[1 * i0 + 151];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 151] += A[i0 + 288] * x[1 * i0 + 150];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 158] += A[i0 + 296] * x[1 * i0 + 159];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 159] += A[i0 + 304] * x[1 * i0 + 158];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 166] += A[i0 + 312] * x[1 * i0 + 167];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 167] += A[i0 + 320] * x[1 * i0 + 166];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 174] += A[i0 + 328] * x[1 * i0 + 175];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 175] += A[i0 + 336] * x[1 * i0 + 174];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 182] += A[i0 + 344] * x[1 * i0 + 183];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 183] += A[i0 + 352] * x[1 * i0 + 182];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 190] += A[i0 + 360] * x[1 * i0 + 191];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 191] += A[i0 + 368] * x[1 * i0 + 190];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 198] += A[i0 + 376] * x[1 * i0 + 199];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 199] += A[i0 + 384] * x[1 * i0 + 198];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 206] += A[i0 + 392] * x[1 * i0 + 207];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 207] += A[i0 + 400] * x[1 * i0 + 206];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 214] += A[i0 + 408] * x[1 * i0 + 215];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 215] += A[i0 + 416] * x[1 * i0 + 214];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 222] += A[i0 + 424] * x[1 * i0 + 223];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 223] += A[i0 + 432] * x[1 * i0 + 222];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 230] += A[i0 + 440] * x[1 * i0 + 231];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 231] += A[i0 + 448] * x[1 * i0 + 230];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 238] += A[i0 + 456] * x[1 * i0 + 239];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 239] += A[i0 + 464] * x[1 * i0 + 238];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 246] += A[i0 + 472] * x[1 * i0 + 247];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 247] += A[i0 + 480] * x[1 * i0 + 246];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 254] += A[i0 + 488] * x[1 * i0 + 255];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 255] += A[i0 + 496] * x[1 * i0 + 254];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 262] += A[i0 + 504] * x[1 * i0 + 263];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 263] += A[i0 + 512] * x[1 * i0 + 262];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 270] += A[i0 + 520] * x[1 * i0 + 271];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 271] += A[i0 + 528] * x[1 * i0 + 270];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 278] += A[i0 + 536] * x[1 * i0 + 279];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 279] += A[i0 + 544] * x[1 * i0 + 278];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 286] += A[i0 + 552] * x[1 * i0 + 287];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 287] += A[i0 + 560] * x[1 * i0 + 286];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 294] += A[i0 + 568] * x[1 * i0 + 295];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 295] += A[i0 + 576] * x[1 * i0 + 294];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 302] += A[i0 + 584] * x[1 * i0 + 303];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 303] += A[i0 + 592] * x[1 * i0 + 302];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 310] += A[i0 + 600] * x[1 * i0 + 311];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 311] += A[i0 + 608] * x[1 * i0 + 310];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 318] += A[i0 + 616] * x[1 * i0 + 319];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 319] += A[i0 + 624] * x[1 * i0 + 318];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 326] += A[i0 + 632] * x[1 * i0 + 327];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 327] += A[i0 + 640] * x[1 * i0 + 326];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 335] += A[i0 + 648] * x[1 * i0 + 336];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 336] += A[i0 + 656] * x[1 * i0 + 335];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 343] += A[i0 + 664] * x[1 * i0 + 344];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 344] += A[i0 + 672] * x[1 * i0 + 343];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 351] += A[i0 + 680] * x[1 * i0 + 352];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 352] += A[i0 + 688] * x[1 * i0 + 351];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 359] += A[i0 + 696] * x[1 * i0 + 360];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 360] += A[i0 + 704] * x[1 * i0 + 359];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 367] += A[i0 + 712] * x[1 * i0 + 368];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 368] += A[i0 + 720] * x[1 * i0 + 367];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 375] += A[i0 + 728] * x[1 * i0 + 376];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 376] += A[i0 + 736] * x[1 * i0 + 375];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 383] += A[i0 + 744] * x[1 * i0 + 384];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 384] += A[i0 + 752] * x[1 * i0 + 383];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 391] += A[i0 + 760] * x[1 * i0 + 392];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 392] += A[i0 + 768] * x[1 * i0 + 391];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 399] += A[i0 + 776] * x[1 * i0 + 400];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 400] += A[i0 + 784] * x[1 * i0 + 399];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 407] += A[i0 + 792] * x[1 * i0 + 408];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 408] += A[i0 + 800] * x[1 * i0 + 407];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 415] += A[i0 + 808] * x[1 * i0 + 416];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 416] += A[i0 + 816] * x[1 * i0 + 415];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 423] += A[i0 + 824] * x[1 * i0 + 424];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 424] += A[i0 + 832] * x[1 * i0 + 423];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 431] += A[i0 + 840] * x[1 * i0 + 432];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 432] += A[i0 + 848] * x[1 * i0 + 431];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 439] += A[i0 + 856] * x[1 * i0 + 440];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 440] += A[i0 + 864] * x[1 * i0 + 439];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 447] += A[i0 + 872] * x[1 * i0 + 448];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 448] += A[i0 + 880] * x[1 * i0 + 447];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 455] += A[i0 + 888] * x[1 * i0 + 456];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 456] += A[i0 + 896] * x[1 * i0 + 455];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 463] += A[i0 + 904] * x[1 * i0 + 464];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 464] += A[i0 + 912] * x[1 * i0 + 463];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 471] += A[i0 + 920] * x[1 * i0 + 472];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 472] += A[i0 + 928] * x[1 * i0 + 471];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 479] += A[i0 + 936] * x[1 * i0 + 480];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 480] += A[i0 + 944] * x[1 * i0 + 479];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 495] += A[i0 + 952] * x[1 * i0 + 496];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 496] += A[i0 + 960] * x[1 * i0 + 495];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 503] += A[i0 + 968] * x[1 * i0 + 504];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 504] += A[i0 + 976] * x[1 * i0 + 503];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 511] += A[i0 + 984] * x[1 * i0 + 512];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 512] += A[i0 + 992] * x[1 * i0 + 511];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 519] += A[i0 + 1000] * x[1 * i0 + 520];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 520] += A[i0 + 1008] * x[1 * i0 + 519];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 527] += A[i0 + 1016] * x[1 * i0 + 528];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 528] += A[i0 + 1024] * x[1 * i0 + 527];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 535] += A[i0 + 1032] * x[1 * i0 + 536];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 536] += A[i0 + 1040] * x[1 * i0 + 535];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 543] += A[i0 + 1048] * x[1 * i0 + 544];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 544] += A[i0 + 1056] * x[1 * i0 + 543];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 551] += A[i0 + 1064] * x[1 * i0 + 552];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 552] += A[i0 + 1072] * x[1 * i0 + 551];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 559] += A[i0 + 1080] * x[1 * i0 + 560];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 560] += A[i0 + 1088] * x[1 * i0 + 559];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 567] += A[i0 + 1096] * x[1 * i0 + 568];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 568] += A[i0 + 1104] * x[1 * i0 + 567];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 575] += A[i0 + 1112] * x[1 * i0 + 576];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 576] += A[i0 + 1120] * x[1 * i0 + 575];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 583] += A[i0 + 1128] * x[1 * i0 + 584];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 584] += A[i0 + 1136] * x[1 * i0 + 583];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 591] += A[i0 + 1144] * x[1 * i0 + 592];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 592] += A[i0 + 1152] * x[1 * i0 + 591];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 599] += A[i0 + 1160] * x[1 * i0 + 600];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 600] += A[i0 + 1168] * x[1 * i0 + 599];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 607] += A[i0 + 1176] * x[1 * i0 + 608];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 608] += A[i0 + 1184] * x[1 * i0 + 607];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 615] += A[i0 + 1192] * x[1 * i0 + 616];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 616] += A[i0 + 1200] * x[1 * i0 + 615];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 623] += A[i0 + 1208] * x[1 * i0 + 624];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 624] += A[i0 + 1216] * x[1 * i0 + 623];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 631] += A[i0 + 1224] * x[1 * i0 + 632];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 632] += A[i0 + 1232] * x[1 * i0 + 631];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 639] += A[i0 + 1240] * x[1 * i0 + 640];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 640] += A[i0 + 1248] * x[1 * i0 + 639];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 654] += A[i0 + 1256] * x[1 * i0 + 655];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 655] += A[i0 + 1264] * x[1 * i0 + 654];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 662] += A[i0 + 1272] * x[1 * i0 + 663];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 663] += A[i0 + 1280] * x[1 * i0 + 662];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 670] += A[i0 + 1288] * x[1 * i0 + 671];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 671] += A[i0 + 1296] * x[1 * i0 + 670];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 678] += A[i0 + 1304] * x[1 * i0 + 679];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 679] += A[i0 + 1312] * x[1 * i0 + 678];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 686] += A[i0 + 1320] * x[1 * i0 + 687];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 687] += A[i0 + 1328] * x[1 * i0 + 686];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 694] += A[i0 + 1336] * x[1 * i0 + 695];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 695] += A[i0 + 1344] * x[1 * i0 + 694];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 702] += A[i0 + 1352] * x[1 * i0 + 703];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 703] += A[i0 + 1360] * x[1 * i0 + 702];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 710] += A[i0 + 1368] * x[1 * i0 + 711];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 711] += A[i0 + 1376] * x[1 * i0 + 710];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 718] += A[i0 + 1384] * x[1 * i0 + 719];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 719] += A[i0 + 1392] * x[1 * i0 + 718];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 726] += A[i0 + 1400] * x[1 * i0 + 727];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 727] += A[i0 + 1408] * x[1 * i0 + 726];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 734] += A[i0 + 1416] * x[1 * i0 + 735];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 735] += A[i0 + 1424] * x[1 * i0 + 734];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 742] += A[i0 + 1432] * x[1 * i0 + 743];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 743] += A[i0 + 1440] * x[1 * i0 + 742];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 750] += A[i0 + 1448] * x[1 * i0 + 751];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 751] += A[i0 + 1456] * x[1 * i0 + 750];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 758] += A[i0 + 1464] * x[1 * i0 + 759];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 759] += A[i0 + 1472] * x[1 * i0 + 758];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 766] += A[i0 + 1480] * x[1 * i0 + 767];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 767] += A[i0 + 1488] * x[1 * i0 + 766];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 774] += A[i0 + 1496] * x[1 * i0 + 775];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 775] += A[i0 + 1504] * x[1 * i0 + 774];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 782] += A[i0 + 1512] * x[1 * i0 + 783];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 783] += A[i0 + 1520] * x[1 * i0 + 782];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 790] += A[i0 + 1528] * x[1 * i0 + 791];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 791] += A[i0 + 1536] * x[1 * i0 + 790];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 798] += A[i0 + 1544] * x[1 * i0 + 799];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 799] += A[i0 + 1552] * x[1 * i0 + 798];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 813] += A[i0 + 1560] * x[1 * i0 + 814];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 814] += A[i0 + 1568] * x[1 * i0 + 813];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 821] += A[i0 + 1576] * x[1 * i0 + 822];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 822] += A[i0 + 1584] * x[1 * i0 + 821];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 829] += A[i0 + 1592] * x[1 * i0 + 830];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 830] += A[i0 + 1600] * x[1 * i0 + 829];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 837] += A[i0 + 1608] * x[1 * i0 + 838];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 838] += A[i0 + 1616] * x[1 * i0 + 837];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 845] += A[i0 + 1624] * x[1 * i0 + 846];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 846] += A[i0 + 1632] * x[1 * i0 + 845];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 853] += A[i0 + 1640] * x[1 * i0 + 854];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 854] += A[i0 + 1648] * x[1 * i0 + 853];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 861] += A[i0 + 1656] * x[1 * i0 + 862];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 862] += A[i0 + 1664] * x[1 * i0 + 861];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 869] += A[i0 + 1672] * x[1 * i0 + 870];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 870] += A[i0 + 1680] * x[1 * i0 + 869];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 877] += A[i0 + 1688] * x[1 * i0 + 878];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 878] += A[i0 + 1696] * x[1 * i0 + 877];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 885] += A[i0 + 1704] * x[1 * i0 + 886];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 886] += A[i0 + 1712] * x[1 * i0 + 885];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 893] += A[i0 + 1720] * x[1 * i0 + 894];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 894] += A[i0 + 1728] * x[1 * i0 + 893];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 901] += A[i0 + 1736] * x[1 * i0 + 902];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 902] += A[i0 + 1744] * x[1 * i0 + 901];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 909] += A[i0 + 1752] * x[1 * i0 + 910];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 910] += A[i0 + 1760] * x[1 * i0 + 909];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 917] += A[i0 + 1768] * x[1 * i0 + 918];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 918] += A[i0 + 1776] * x[1 * i0 + 917];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 925] += A[i0 + 1784] * x[1 * i0 + 926];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 926] += A[i0 + 1792] * x[1 * i0 + 925];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 933] += A[i0 + 1800] * x[1 * i0 + 934];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 934] += A[i0 + 1808] * x[1 * i0 + 933];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 941] += A[i0 + 1816] * x[1 * i0 + 942];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 942] += A[i0 + 1824] * x[1 * i0 + 941];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 949] += A[i0 + 1832] * x[1 * i0 + 950];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 950] += A[i0 + 1840] * x[1 * i0 + 949];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 957] += A[i0 + 1848] * x[1 * i0 + 958];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 958] += A[i0 + 1856] * x[1 * i0 + 957];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 973] += A[i0 + 1864] * x[1 * i0 + 974];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 974] += A[i0 + 1872] * x[1 * i0 + 973];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 981] += A[i0 + 1880] * x[1 * i0 + 982];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 982] += A[i0 + 1888] * x[1 * i0 + 981];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 989] += A[i0 + 1896] * x[1 * i0 + 990];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 990] += A[i0 + 1904] * x[1 * i0 + 989];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 997] += A[i0 + 1912] * x[1 * i0 + 998];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 998] += A[i0 + 1920] * x[1 * i0 + 997];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1005] += A[i0 + 1928] * x[1 * i0 + 1006];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1006] += A[i0 + 1936] * x[1 * i0 + 1005];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1013] += A[i0 + 1944] * x[1 * i0 + 1014];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1014] += A[i0 + 1952] * x[1 * i0 + 1013];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1021] += A[i0 + 1960] * x[1 * i0 + 1022];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1022] += A[i0 + 1968] * x[1 * i0 + 1021];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1029] += A[i0 + 1976] * x[1 * i0 + 1030];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1030] += A[i0 + 1984] * x[1 * i0 + 1029];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1037] += A[i0 + 1992] * x[1 * i0 + 1038];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1038] += A[i0 + 2000] * x[1 * i0 + 1037];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1045] += A[i0 + 2008] * x[1 * i0 + 1046];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1046] += A[i0 + 2016] * x[1 * i0 + 1045];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1053] += A[i0 + 2024] * x[1 * i0 + 1054];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1054] += A[i0 + 2032] * x[1 * i0 + 1053];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1061] += A[i0 + 2040] * x[1 * i0 + 1062];
  }
  for (i0 = 0; i0 <= 7; ++i0)
  {
    y[1 * i0 + 1062] += A[i0 + 2048] * x[1 * i0 + 1061];
  }
#pragma endmacveth
}
